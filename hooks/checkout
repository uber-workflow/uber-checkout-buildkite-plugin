#!/usr/bin/env bash

set -euo pipefail

readonly dir="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

. "$dir"/lib/utils.sh

# takes space-separated list of diff ids, ex: "16928591 16929049 16931817"
function apply_diffs() {
  local diff_ids_arr=("$1")
  echo "TODO: applying diff ids ${diff_ids_arr[*]}"
}

# checkout <phab callsign> <ref>
# ex1: checkout WEBCODR main
# ex2: checkout WEBCODR 69efbc0d245c185b4c964f3e9fd88c9c94a425d9
# ex2: checkout WEBCODR phabricator/diff/16956521
function checkout() {
  local callsign="$1"
  local git_ref="$2"
  local primary_remote_uri
  local staging_remote_uri
  primary_remote_uri=$(get_repo_info "$callsign" | jq -r '.result[0].remoteURI')
  staging_remote_uri=$(get_repo_info "$callsign" | jq -r '.result[0].staging.uri')
  ensure_var "primary_remote_uri"
  ensure_var "staging_remote_uri"

  # clean workspace
  find . -maxdepth 1 -mindepth 1 -print0 | xargs -0 rm -rf
  
  # TODO: install cache here (initialize a cache of the primary repo's .git folder from cache)

  # set primary remote
  git remote rm origin || true
  git remote add origin "$primary_remote_uri"

  # set staging remote
  git remote rm staging || true
  git remote add staging "$staging_remote_uri"

  # If $git_ref starts with phabricator/, fetch from staging. Else fetch from primary.
  if [[ $git_ref == phabricator/* ]]; then
    git fetch --shallow-since=1.month.ago staging "$git_ref"
  else
    git fetch --shallow-since=1.month.ago origin "$git_ref"
  fi
}

checkout "$BUILDKITE_PLUGIN_UBER_CHECKOUT_CALLSIGN" "$BUILDKITE_BRANCH"
